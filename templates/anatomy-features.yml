anatomy-features:

  - name: python-pytest
    items:

      - name: pytestini
        add-file-block:
          filename: pytest.ini
          contents: |
            # Automatically generated with zops.anatomy.

            [pytest]
            addopts = --reuse-db --pylama --tb=short --ds ax.api_calc.settings
            timeout = 240

  - name: ide-ignores
    items:

      - name: gitignore
        add-file-block:
          filename: .gitignore
          contents: |
            /.idea/
            /.settings/
            /.project
            /.pydevproject

  - name: python-project
    items:
      - name: gitignore
        add-file-block:
          filename: .gitignore
          contents: |
            *.pyc
            *.pyd
            *.pyo
            # setuptools
            /*.egg-info/
            /.eggs/
            __pycache__/
            /dist/
            /build/
            # Where is this created?
            /.cache/

  - name: ansible-ignores
    items:
      - name: gitignore
        add-file-block:
          filename: .gitignore
          contents: |
            /*.retry

  - name: python-setuptools
    items:

      - name: gitignore
        add-file-block:
          filename: .gitignore
          contents: |
            /*.retry

      - name: setuppy
        add-file-block:
          filename: setup.py
          contents: |
            #!/bin/env python
            """
            Automatically generated with zops.anatomy.
            """
            import os

            from pip.req import parse_requirements
            from setuptools import setup


            # REFERENCE: http://stackoverflow.com/questions/14399534
            install_requires = [
                str(i.req)
                for i in parse_requirements(
                    os.path.join(os.path.dirname(__file__), 'requirements/base.include'),
                    session='hack',  # Bogus value
                )
            ]

            setup_kwargs = dict(
                name='{project.code_namespace}.{project.name}',
                url='https://github.com/{repo.user}/{repo.prefix}.{project.code_name}',
                description="{project.description}",
                long_description='''{project.description}''',
                classifiers=[
                    'Development Status :: 3 - Alpha',
                    'Programming Language :: Python :: 3',
                    'Programming Language :: Python :: 3.5',
                ],
                keywords=['axado', 'api'],
            )

            # Versioning
            setup_kwargs['use_scm_version'] =True

            # Packages (using namespace)
            setup_kwargs['include_package_data'] = True
            setup_kwargs['packages'] = ['{project.code_namespace}', '{project.code_namespace}.{project.code_name}']
            setup_kwargs['namespace_packages'] = ['{project.code_namespace}']

            # Dependencies
            setup_kwargs['install_requires'] = install_requires
            setup_kwargs['dependency_links'] = []
            setup_kwargs['setup_requires'] = ['setuptools_scm']
            setup_kwargs['tests_require'] = []

            # ZOPs
            setup_kwargs['entry_points'] = """
              [zops.plugins]
              {project.code_namespace}.{project.name}={project.code_namespace}.{project.code_name}.zops:main
            """

            setup(**setup_kwargs)

  - name: ci
    items:
      - name: gitignore
        add-file-block:
          filename: .gitignore
          contents: |
            /junit.xml
